package main.java.ru.furiosaming.javacoretasks.chapter10;

public class Exercise24 {
    /** Найдите ошибку в следующем фрагменте кода:
    public class Stack {
        private Object[] values = new Object[10];
        private int size;
        public void push(Object newValue) {
            synchronized (values) {
                if (size == values.length)
                    values = Arrays.copyOf(values, 2 * size);
                values[size] = newValue;
                size++;
            }
        }
    }

     Решение: в данном случае передавать массив в блок synchronized будет ошибкой.
     Для values в оперативной памяти компьютера выделяется определенное место.
     Но оперативная память действует намного медленнее современных
     процессоров. Поэтому процессор пытается сохранить нужные ему данные в своих
     регистрах или во встроенной сверхоперативной памяти, записывая окончательные
     изменения в основной оперативной памяти. Такое кеширование данных просто необходимо
     для производительной работы процессора. Для синхронизации кешируемых копий данных
     имеются специальные операции, но они выполняются только по запросу. Параллельный
     доступ к оперативной памяти отсутствует.
     Но и это еще не все. Компилятор, виртуальная машина и процессор могут изменить
     порядок выполнения инструкций ради ускорения операций, при условии, что
     это не изменит семантику выполняемой программы.

     **/

}
